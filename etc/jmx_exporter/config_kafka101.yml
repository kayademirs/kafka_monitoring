hostPort: kafka101:9991
lowercaseOutputName: true
lowercaseOutputLabelNames: true

# Whitelist is used to reduce scrapping time
whitelistObjectNames:
  - java.lang:*
  - kafka.cluster:*
  - kafka.controller:*
  - kafka.log:*
  - kafka.server:type=KafkaServer,name=BrokerState
  - kafka.server:type=KafkaRequestHandlerPool,*
  - kafka.server:type=BrokerTopicMetrics,*
  - kafka.server:type=FetcherLagMetrics,*
  - kafka.server:type=FetcherStats,*
  - kafka.server:type=Request,*
  - kafka.server:type=Fetch,*
  - kafka.server:type=Produce,*
  - kafka.server:type=ReplicaManager,*
  - kafka.server:type=ReplicaFetcherManager,*
  - kafka.server:type=SessionExpireListener,*
  - kafka.server:type=controller-channel-metrics,*
  - kafka.server:type=socket-server-metrics,*
  - kafka.network:type=RequestChannel,*
  - kafka.network:type=Processor,*
  - kafka.network:type=SocketServer,*
  - kafka.network:type=RequestMetrics,*
  - kafka.coordinator.group:*
blacklistObjectNames:
  - java.lang:type=ClassLoading,*
  - java.lang:type=Compilation,*
  - java.lang:type=MemoryManager,*
  - kafka.utils:*
  - kafka.controller:type=ControllerChannelManager,name=QueueSize,*
  # Following metrics are exposed per topics
  - kafka.log:type=Log,name=LogEndOffset,*
  - kafka.log:type=Log,name=LogStartOffset,*
  - kafka.cluster:type=Partition,name=InSyncReplicasCount,*
  - kafka.cluster:type=Partition,name=LastStableOffsetLag,*
  - kafka.cluster:type=Partition,name=ReplicasCounts,*
  - kafka.cluster:type=Partition,name=UnderReplicated,*
  - kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec,*
  - kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec,*
  - kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec,*
  - kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec,*
  - kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec,*

rules:
  #-------------------------------------------------------------------------------------------------------
  # Broker Metrics :
  #-------------------------------------------------------------------------------------------------------
  # Total Topic Count
  - pattern: kafka.server<type=BrokerTopicMetrics, name=Topics><>Value
    name: kafka_server_broker_topic_count
    labels:
      service: kafka-broker
      env: cluster-demo

  # Total Message Count
  - pattern: kafka.server<type=BrokerTopicMetrics, name=MessagesInPerSec><>OneMinuteRate
    name: kafka_server_broker_total_messages_per_sec
    labels:
      aggregate: one_minute_rate
      service: kafka-broker
      env: cluster-demo

  # Total Partition Count
  - pattern: kafka.cluster<type=Partition, name=([^,]+), topic=([^,]+), partition=([^,]+)><>Value
    name: kafka_cluster_partition_$1
    labels:
      topic: $2
      partition: $3
      service: kafka-broker
      env: cluster-demo

  #-------------------------------------------------------------------------------------------------------
  # JVM Metrics :
  #-------------------------------------------------------------------------------------------------------
  # CPU Usage
  - pattern: java.lang<type=OperatingSystem><ProcessCpuLoad>
    name: kafka_jvm_os_process_cpu_load
    labels:
      service: kafka-broker
      env: cluster-demo

  # RAM Usage
  - pattern: java.lang<type=OperatingSystem><TotalPhysicalMemorySize>
    name: kafka_jvm_os_total_physical_memory_size
    labels:
      service: kafka-broker
      env: cluster-demo

  # Heap Memory Usage
  - pattern: java.lang<type=Memory><HeapMemoryUsage>(\w*)
    name: kafka_jvm_heap_usage
    labels:
      type: $1
      service: kafka-broker
      env: cluster-demo
    attrNameSnakeCase: true

  # Non-Heap Memory Usage
  - pattern: java.lang<type=Memory><NonHeapMemoryUsage>(\w*)
    name: kafka_jvm_non_heap_usage
    labels:
      type: $1
      service: kafka-broker
      env: cluster-demo
    attrNameSnakeCase: true
